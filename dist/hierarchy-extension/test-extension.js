"use strict";!function(){const e={id:"test-extension",className:"hierarchy-test",style:"\n            .hierarchy-test {\n                position: absolute;\n                right: 24px;\n                top: 50%;\n                transform: translateY(-50%);\n                display: flex;\n                gap: 4px;\n            }\n            .hierarchy-test button {\n                padding: 2px 4px;\n                font-size: 12px;\n                cursor: pointer;\n                border: 1px solid #ccc;\n                border-radius: 2px;\n                background: white;\n            }\n            .hierarchy-test button:hover {\n                background: #f0f0f0;\n            }\n            .hierarchy-test .info {\n                font-size: 12px;\n                color: #666;\n            }\n        ",lifecycle:{onInit(){var e,n;console.log("[Test Extension] 初始化"),null===(e=window.hierarchy.events)||void 0===e||e.on("treeUpdate",(()=>{const e=window.hierarchy.tree;e&&console.log("[Test Extension] 节点树更新:",{nodeCount:e.nodeMap.size,rootCount:e.rootNodes.length,roots:e.rootNodes.map((n=>({name:n.name,type:n.type,children:e.getChildren(n.uuid).length})))})})),null===(n=window.hierarchy.events)||void 0===n||n.on("assetChange",((e,n)=>{var o;console.log("[Test Extension] 资源切换:",{assetId:e,assetType:n,nodeCount:(null===(o=window.hierarchy.tree)||void 0===o?void 0:o.nodeMap.size)||0})}))},onAssetChange(e,n){console.log("扩展接收到资源切换:",{assetId:e,assetType:n})},onDestroy(){console.log("测试扩展销毁")}},isVisible:e=>!e.prefab,onCreate(e,n){if(!e||!e.uuid)return void console.error("[Test Extension] 无效的节点数据:",e);const o=document.createElement("div");o.className="info",o.textContent=`[${e.type}]`;const t=document.createElement("button");t.textContent="子节点",t.onclick=n=>{var o;n.stopPropagation();const t=null===(o=window.hierarchy.tree)||void 0===o?void 0:o.getChildren(e.uuid);console.log("[Test Extension] 子节点:",(null==t?void 0:t.length)||0,t)};const i=document.createElement("button");i.textContent="父节点",i.onclick=n=>{var o;n.stopPropagation();const t=null===(o=window.hierarchy.tree)||void 0===o?void 0:o.getParent(e.uuid);console.log("[Test Extension] 父节点:",(null==t?void 0:t.uuid)||"null",t)};const r=document.createElement("button");r.textContent="属性",r.onclick=n=>{n.stopPropagation(),console.log("[Test Extension] 节点属性:",{uuid:e.uuid,name:e.name,type:e.type,active:e.active,parent:e.parent,hasElement:!!e.element,hasVueComponent:!!e.vueComponent})},n.appendChild(o),n.appendChild(t),n.appendChild(i),n.appendChild(r)},onUpdate(e,n){if(!e||!e.uuid)return void console.error("[Test Extension] 无效的节点数据:",e);const o=n.querySelector(".info");o&&(o.textContent=`[${e.type}]${e.active?"":" (未激活)"}`)}},n=setInterval((()=>{var o,t,i,r,s;(null===(o=window.hierarchy)||void 0===o?void 0:o.extension)&&(clearInterval(n),window.hierarchy.extension.add(e),console.log("测试扩展已加载:",{vue:window.hierarchy.vue,tree:{nodeCount:null===(t=window.hierarchy.tree)||void 0===t?void 0:t.nodeMap.size,rootNodes:null===(i=window.hierarchy.tree)||void 0===i?void 0:i.rootNodes},events:null===(r=window.hierarchy.events)||void 0===r?void 0:r.listeners,extensions:null===(s=window.hierarchy.extension)||void 0===s?void 0:s.getAll()}))}),100)}();
